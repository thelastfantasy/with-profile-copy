name: Build on Merge to Main

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [ closed ]

jobs:
  build:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        persist-credentials: true

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Verify script.user.js exists
      run: |
        if [ ! -f "script.user.js" ]; then
          echo "❌ script.user.js was not generated"
          exit 1
        fi

    - name: Check script.user.js version
      run: |
        VERSION=$(grep -oP '@version\s+\K[^\s]+' script.user.js)
        echo "Generated script.user.js version: $VERSION"

        PACKAGE_VERSION=$(node -p "require('./package.json').version")
        echo "Package.json version: $PACKAGE_VERSION"

        if [ "$VERSION" != "$PACKAGE_VERSION" ]; then
          echo "❌ Version mismatch: script.user.js has $VERSION, package.json has $PACKAGE_VERSION"
          exit 1
        fi

    - name: Check if src files changed
      run: |
        # Calculate hash of src directory TypeScript files
        SRC_HASH=$(find src -name "*.ts" -type f -exec sha256sum {} + | sort | sha256sum | cut -d' ' -f1)
        echo "Current src files hash: $SRC_HASH"

        # Check if dist branch exists and get previous hash
        if git ls-remote --heads origin dist | grep -q dist; then
          git fetch origin dist
          PREV_HASH=$(git show origin/dist:src-hash.txt 2>/dev/null || echo "")
          echo "Previous src files hash: $PREV_HASH"

          if [ "$SRC_HASH" = "$PREV_HASH" ]; then
            echo "✅ No changes in src files, skipping script.user.js update"
            echo "skip_update=true" >> $GITHUB_ENV
          else
            echo "🔧 Source files changed, will update script.user.js"
            echo "skip_update=false" >> $GITHUB_ENV
          fi
        else
          echo "🔧 No dist branch found, will create with script.user.js"
          echo "skip_update=false" >> $GITHUB_ENV
        fi

    - name: Commit and push to dist branch
      if: env.skip_update == 'false'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

        # Save current src hash
        find src -name "*.ts" -type f -exec sha256sum {} + | sort | sha256sum | cut -d' ' -f1 > src-hash.txt

        # Commit and push to dist branch
        git add script.user.js src-hash.txt
        git commit -m "chore: regenerate script.user.js after src changes [skip ci]"
        git checkout -b dist
        git push origin dist --force
        echo "✅ Updated script.user.js pushed to dist branch"